<!-- ------------------------------------------------------------------- -->
<!--                                                                     -->
<!--  app-meth.xml          Utils documentation            Chris Wensley -->
<!--                                                                     -->
<!--  Copyright (C) 2015-2018, The GAP Group                             --> 
<!--                                                                     -->
<!-- ------------------------------------------------------------------- -->

<?xml version="1.0" encoding="UTF-8"?>

<Section Label="sec-methods">
<Heading>Applicable methods</Heading> 

The functions described in this section are a first attempt to 
deal with &GAP; issue on GitHub at  
<URL>https://github.com/gap-system/gap/issues/2871</URL>. 
All these functions have names containing ``Utils'' so that if, 
after further revisions, the changes are approved, then it will be 
straightforward to copy the new code into the &GAP; library 
with ``Utils'' removed from the names. 

<ManSection>
<Func Name="ApplicableMethodUtils" Arg='opr, args[, nr]]'/>

<Description>
Called with two arguments, <Ref Func="ApplicableMethodUtils"/> returns the
method of highest rank that is applicable for the operation <A>opr</A>
with the arguments in the list <A>args</A>.
If no method is applicable then <K>fail</K> is returned.
<P/>
If a positive integer is given as the third argument <A>nr</A> then
<Ref Func="ApplicableMethodUtils"/> returns the <A>nr</A>-th applicable method
for the operation <A>opr</A> with the arguments in the list <A>args</A>,
where the methods are ordered according to descending rank.
If less than <A>nr</A> methods are applicable then <K>fail</K> is
returned.
<P/>
If the third argument <A>nr</A> is the string <C>"all"</C> then
<Ref Func="ApplicableMethodUtils"/>
returns a list of all applicable methods for <A>opr</A> with arguments
<A>args</A>, ordered according to descending rank.
<P/>
Depending on the integer value set by 
<Ref Func="ApplicableMethodPrintLevelUtils"/>, 
additional information is printed.  
Admissible values and their meaning are as follows.
<P/>
<List>
<Mark>1</Mark>
<Item>
    information about the applicable method,
</Item>
<Mark>2</Mark>
<Item>
    also information about the not applicable methods of higher rank,
</Item>
<Mark>3</Mark>
<Item>
    also, for each not applicable method, 
    the first reason why it is not applicable,
</Item>
<Mark>4</Mark>
<Item>
    also, for each not applicable method, 
    all reasons why it is not applicable.
</Item>
</List>
<P/>
When a method returned by <Ref Func="ApplicableMethodUtils"/> is called then
it returns either the desired result or the string
<C>"TRY_NEXT_METHOD"</C>, which corresponds to a call to
<Ref Func="TryNextMethod"/> in the method and means that
the method selection would call the next applicable method.
<P/>
<E>Note:</E>
The &GAP; kernel provides special treatment for the infix operations
<C>\+</C>, <C>\-</C>, <C>\*</C>, <C>\/</C>, <C>\^</C>, <C>\mod</C> and
<C>\in</C>.
For some kernel objects (notably cyclotomic numbers,
finite field elements and row vectors thereof) it calls kernel methods
circumventing the method selection mechanism.
Therefore for these operations <Ref Func="ApplicableMethodUtils"/> may return
a method which is not the kernel method actually used.
<P/>
Functions which are not operations do not have methods, 
but <C>ApplicableMethodUtils</C> will print out the location of the function. 
<P/>
</Description>
</ManSection>
<P/>
<Example>
<![CDATA[
gap> s4 := Group( (1,2,3,4), (3,4) );;
gap> a4 := Subgroup( s4, [ (1,2,3), (2,3,4) ] );; 
gap> ApplicableMethodUtils( CommutatorSubgroup, [ s4, a4 ] );
#I  Searching Methods for CommutatorSubgroup with 2 arguments:
#I  CommutatorSubgroup has 8 methods
#I  of which 3 are satisfied by the input.
#I Method: 2,  value: 116,  is applicable method #1.
#I  CommutatorSubgroup: permgroups
#I  at: /Applications/gap/gap4r9/lib/grpperm.gi:949
function( U, V ) ... end
gap> ApplicableMethodUtils( CommutatorSubgroup, [ s4, a4 ], 2 );
#I  Searching Methods for CommutatorSubgroup with 2 arguments:
#I  CommutatorSubgroup has 8 methods
#I  of which 3 are satisfied by the input.
#I Method: 7,  value: 72,  is applicable method #2.
#I  CommutatorSubgroup: groups with home pcgs
#I  at: /Applications/gap/gap4r9/lib/grppc.gi:875
function( U, V ) ... end
gap> ApplicableMethodUtils( CommutatorSubgroup, [ s4, a4 ], 3 );
#I  Searching Methods for CommutatorSubgroup with 2 arguments:
#I  CommutatorSubgroup has 8 methods
#I  of which 3 are satisfied by the input.
#I Method: 8,  value: 70,  is applicable method #3.
#I  CommutatorSubgroup: generic method for two groups
#I  at: /Applications/gap/gap4r9/lib/grp.gi:2386
function( U, V ) ... end
gap> ApplicableMethodUtils( DirectProduct, [a4,s4] );
#I  This function starts at the following file and line number:
#I  /Applications/gap/gap4r9/lib/gprd.gi:17
function( arg... ) ... end
]]>
</Example>

<ManSection>
<Func Name="PrintApplicableMethodUtils" Arg='opr, args[, nr]]'/>
<Description>
This function was, until recently, called <C>PrintApplicableMethod</C>. 
The name has been changed with the intention of introducing a 
<C>PrintApplicableMethod</C> in the main &GAP; library. 
<P/>
This function prints the location of the file 
containing the <A>nr</A>-th applicable method, 
and a listing of that method. 
In its simplest form it is called as <C>PrintApplicableMethodUtils(f,L)</C> 
for a function <C>f</C> and a list of parameters <C>L</C>. 
Alternatively, when called as <C>PrintApplicableMethodUtils(f,L,n)</C> 
it prints the method returned by <C>ApplicableMethodUtils(f,L,n)</C>. 
<P/>
</Description>
</ManSection>
<P/>
<Example>
<![CDATA[
gap> PrintApplicableMethodUtils( IsCyclic, [ Group((1,2,3),(4,5)) ] );
#I  IsCyclic has 7 methods
#I  of which 3 are satisfied by the input.
#I  This method starts at the following file and line number:
#I  /Applications/gap/gap4r9/lib/grp.gi:30
function ( G )
    if Length( GeneratorsOfGroup( G ) ) = 1 then
        return true;
    else
        TryNextMethod();
    fi;
    return;
end
]]>
</Example>

<ManSection>
<Func Name="ApplicableMethodPrintLevelUtils" Arg='val'/>
<Description>
This function sets the print level used by <Ref Func="ApplicableMethodUtils"/> 
equal to <A>val</A>.  Allowed values are <C>[1,2,3,4]</C>, 
whose meanings are described in that section. 
(Previous allowed values were <C>0</C> and <C>6</C>. 
The value <C>6</C> was used to print out the method, so this option has been 
replaced by the function <Ref Func="PrintApplicableMethodUtils"/>. 
<P/>
</Description>
</ManSection>
<P/>
<Example>
<![CDATA[
gap> ApplicableMethodPrintLevelUtils( 4 );                                 
gap> ApplicableMethodUtils( CommutatorSubgroup, [a4,s4] );             
#I  Searching Methods for CommutatorSubgroup with 2 arguments:
#I  CommutatorSubgroup has 8 methods
#I  of which 3 are satisfied by the input.
#I Method: 1,  value: 744
#I  CommutatorSubgroup: handled by nice monomorphism:group CollColl
#I  at: /Applications/gap/gap4r9/lib/grpnice.gd:450
#I  arg 1 needs [ "IsHandledByNiceMonomorphism", 
  "HasIsHandledByNiceMonomorphism" ]
#I  arg 2 needs [ "IsHandledByNiceMonomorphism", 
  "HasIsHandledByNiceMonomorphism" ]
#I Method: 2,  value: 116,  is applicable method #1.
#I  CommutatorSubgroup: permgroups
#I  at: /Applications/gap/gap4r9/lib/grpperm.gi:949
function( U, V ) ... end
]]>
</Example>

<ManSection>
<Func Name="ApplicableMethodResetUtils" Arg=' '/>
<Description>
This function unbinds the list of methods and other information stored 
when <Ref Func="ApplicableMethodUtils"/> or 
<Ref Func="PrintApplicableMethodUtils"/> are called. 
</Description>
</ManSection>

<ManSection>
<Func Name="ApplicableMethodSetupUtils" Arg='opr, args'/>
<Description>
This subsection is included for the information of the developers.
<P/>
This function is not normally called directly by the user. 
It is called by <Ref Func="ApplicableMethodUtils"/> to calculate 
and store information about the methods available for operation <A>opr</A>. 
<P/>
After setup the global record <C>APPLICABLE_METHODS_RECORD</C> 
contains the following fields: 
<List>
<Item>
<C>.reset</C>, set to <C>true</C>; 
</Item>
<Item> 
<C>.name</C>, the name of the operation; 
</Item>
<Item>
<C>.arguments</C>, the arguments supplied to the operation; 
</Item>
<Item>
<C>.methods</C>, a list of information about all the methods found; 
</Item>
<Item>
<C>.lenmeth</C>, the number of entries for each method in <C>.methods</C>; 
</Item>
<Item>
<C>.needs</C>, for each non-applicable method, and for each parameter, 
a list of properties which the parameter fails to possess; 
</Item>
<Item>
<C>.valid</C>, a list of the positions in <C>.methods</C> 
where the methods <E>are</E> applicable; 
</Item>
<Item>
<C>.printlevel</C>, the current print level, by default <M>1</M>. 
</Item>
</List>
</Description>
</ManSection>

</Section>


</Chapter>

